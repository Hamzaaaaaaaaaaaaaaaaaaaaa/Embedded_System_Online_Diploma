/*
 * main.c
 *
 *  Created on: Jul 19, 2024
 *      Author: SOUQ COMPUTER
 */

#include "Student_Database_Using_Queue.h"


#define STUDENTS_NUMBER 50

/***********************************************************/

int main (void)
{
	FIFO_Buf_st students_queue ;
	FIFO_Node_st students_buffer[STUDENTS_NUMBER];
/***********************************************************/
	Students_DB_Init(&students_queue,students_buffer, STUDENTS_NUMBER);
printf("======================================================================");
printf("\n================= Welcome to my students Database ==================");
printf("=================== Author : Hamza Ahmed =============================");
int choise ;
while (1)
{
	printf("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$");
	printf("\n Choose on of the following options \n");
	printf("\t\n 1: Add Student Manually.");
	printf("\t\n 2: Add Student from text file.");
	printf("\t\n 3: Find Student by Roll Number.");
	printf("\t\n 4: Find Student by Frist Name.");
	printf("\t\n 5: Find Student by Coursre ID.");
	printf("\t\n 6: Print The Student Number.");
	printf("\t\n 7: Delete Student by Roll Number.");
	printf("\t\n 8: Update Student by Roll Number.");
	printf("\t\n 9: View All Students.");
	printf("\t\n 10: Exit The Program.");
	printf("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$");
	printf("\n Enter An Option Number :");

	scanf("%d",&choise);
	printf("$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$");

	switch (choise)
	{
	case 1 : Add_Student_Manualy(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 2 : Add_Student_From_File(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 3 : Find_Student_by_Roll_Number(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 4 : Find_Student_by_FirstName(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 5 : Find_Student_by_Course(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 6 : Print_Students_Count(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 7 : Delete_Student_by_Roll_Number(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 8 : Update_Student_by_Roll_Number(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 9 : Show_Students_Info(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	break;

	case 10 : Update_DataBase_Students(&students_queue);
	printf("\n================================================================================================================");
	printf("\n=============================================== Done ===========================================================");
	printf("\n================================================================================================================");
	printf("\n\n");
	return 0;
	default : printf("\n invalid option ....try again...\n")
	break;
	}

}




return 0;



}


















